<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:VectorMaker.ControlsResources"
    xmlns:icons ="http://metro.mahapps.com/winfx/xaml/iconpacks">


    <Style TargetType="{x:Type controls:ButtonWithIcon}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{DynamicResource ResourceKey=BackgroundButtonColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey=LightText}" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <Border CornerRadius="{Binding ButtonCornerRadius, RelativeSource={RelativeSource 
                            AncestorType={x:Type controls:ButtonWithIcon}},Mode=OneWay}"
                            BorderThickness="0" Background="{TemplateBinding Background}">
                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="{DynamicResource ResourceKey=BackgroundButtoncolor}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <icons:PackIconBootstrapIcons
                               Height="{Binding IconHeight, RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}}"
                               Width="{Binding IconWidth, RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}}"
                               Grid.Row="{Binding IconRow, RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}}"
                               Grid.Column="{Binding IconColumn, RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}}"
                               Grid.ColumnSpan="{Binding IconColumnSpan, RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}}"
                               Grid.RowSpan="{Binding IconRowSpan, RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}}"
                               Kind="{Binding IconKind, RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}}"
                               VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <ContentPresenter Content="{Binding ButtonContent, RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}}" 
                                              Grid.Column="{Binding ContentColumn, RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}}"
                                              Grid.ColumnSpan="{Binding ContentColumnSpan, RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}}"
                                              Grid.Row="{Binding ContentRow, RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}}"
                                              Grid.RowSpan="{Binding ContentRowSpan, RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}}"
                                              HorizontalAlignment="Center" VerticalAlignment="Center"/>

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ResourceKey=BackgroundMouseOverButtonColor}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ResourceKey=BackgroundPressedButtonColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
