<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:VectorMaker.ControlsResources"
    xmlns:icons ="http://metro.mahapps.com/winfx/xaml/iconpacks">


    <Style TargetType="{x:Type controls:ButtonWithIcon}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{DynamicResource ResourceKey=BackgroundButtonColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey=LightText}" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <Border CornerRadius="{Binding ButtonCornerRadius, RelativeSource={RelativeSource 
                            AncestorType={x:Type controls:ButtonWithIcon}},Mode=OneWay}"
                            BorderThickness="0" Background="{TemplateBinding Background}">
                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="{DynamicResource ResourceKey=BackgroundButtoncolor}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <icons:PackIconBootstrapIcons
                               Height="{Binding IconHeight, RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}}"
                               Width="{Binding IconWidth, RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}}"
                               Grid.Row="{Binding IconRow, RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}}"
                               Grid.Column="{Binding IconColumn, RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}}"
                               Grid.ColumnSpan="{Binding IconColumnSpan, RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}}"
                               Grid.RowSpan="{Binding IconRowSpan, RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}}"
                               Kind="{Binding IconKind, RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}}"
                               VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <ContentPresenter Content="{Binding ButtonContent, RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}}" 
                                              Grid.Column="{Binding ContentColumn, RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}}"
                                              Grid.ColumnSpan="{Binding ContentColumnSpan, RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}}"
                                              Grid.Row="{Binding ContentRow, RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}}"
                                              Grid.RowSpan="{Binding ContentRowSpan, RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}}"
                                              HorizontalAlignment="Center" VerticalAlignment="Center"/>

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ResourceKey=BackgroundMouseOverButtonColor}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ResourceKey=BackgroundPressedButtonColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:ToggleButtonWithIcon}" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="Background" Value="{DynamicResource ResourceKey=BackgroundButtonColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey=LightText}" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}" >
                    <Border CornerRadius="{Binding ButtonCornerRadius, RelativeSource={RelativeSource 
                            AncestorType={x:Type controls:ToggleButtonWithIcon}},Mode=OneWay}"
                            BorderThickness="0" Background="{TemplateBinding Background}">
                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="{DynamicResource ResourceKey=BackgroundButtoncolor}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <icons:PackIconBootstrapIcons
                               Height="{Binding IconHeight, RelativeSource={RelativeSource AncestorType=controls:ToggleButtonWithIcon}}"
                               Width="{Binding IconWidth, RelativeSource={RelativeSource AncestorType=controls:ToggleButtonWithIcon}}"
                               Grid.Row="{Binding IconRow, RelativeSource={RelativeSource AncestorType=controls:ToggleButtonWithIcon}}"
                               Grid.Column="{Binding IconColumn, RelativeSource={RelativeSource AncestorType=controls:ToggleButtonWithIcon}}"
                               Grid.ColumnSpan="{Binding IconColumnSpan, RelativeSource={RelativeSource AncestorType=controls:ToggleButtonWithIcon}}"
                               Grid.RowSpan="{Binding IconRowSpan, RelativeSource={RelativeSource AncestorType=controls:ToggleButtonWithIcon}}"
                               Kind="{Binding IconKind, RelativeSource={RelativeSource AncestorType=controls:ToggleButtonWithIcon}}"
                               VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <ContentPresenter Content="{Binding ButtonContent, RelativeSource={RelativeSource AncestorType=controls:ToggleButtonWithIcon}}" 
                                              Grid.Column="{Binding ContentColumn, RelativeSource={RelativeSource AncestorType=controls:ToggleButtonWithIcon}}"
                                              Grid.ColumnSpan="{Binding ContentColumnSpan, RelativeSource={RelativeSource AncestorType=controls:ToggleButtonWithIcon}}"
                                              Grid.Row="{Binding ContentRow, RelativeSource={RelativeSource AncestorType=controls:ToggleButtonWithIcon}}"
                                              Grid.RowSpan="{Binding ContentRowSpan, RelativeSource={RelativeSource AncestorType=controls:ToggleButtonWithIcon}}"
                                              HorizontalAlignment="Center" VerticalAlignment="Center"/>

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ResourceKey=BackgroundMouseOverButtonColor}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ResourceKey=BackgroundPressedButtonColor}" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ResourceKey=BackgroundCheckedButtonColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="SliderButtonStyle"
       TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels"
          Value="true" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="IsTabStop"
          Value="false" />
        <Setter Property="Focusable"
          Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style x:Key="HorizontalSliderThumbStyle"
       TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Width"
          Value="{Binding ThumbWidth, RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle x:Name="Rectangle"
                        RadiusX="0.1"
                        RadiusY="0.1"
                        StrokeThickness="{Binding ThumbStrokeThickness, RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}}" 
                        Fill="{Binding ThumbColor, RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}}"
                        Stroke="{Binding ThumbStrokeColor, RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}}"
                        Height="{TemplateBinding Height}"
                        Width="{Binding ThumbWidth, RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}}">
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalSliderThumbStyle"
       TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Height"
          Value="{Binding ThumbHeight, RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle x:Name="Rectangle"
                        RadiusX="0.2"
                        RadiusY="0.2"
                        StrokeThickness="{Binding ThumbStrokeThickness, RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}}" 
                        Fill="{Binding ThumbColor, RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}}"
                        Stroke="{Binding ThumbStrokeColor, RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}}"
                        Height="{Binding ThumbHeight, RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}}"
                        Width="{TemplateBinding Width}">
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate TargetType="{x:Type Slider}" x:Key="Horizontal">
        <Grid >
            <Border x:Name="TrackBackground"
                            CornerRadius="{Binding BackgroundRadius, RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}}"
                            Height="{TemplateBinding Height}"
                            BorderBrush="{Binding BackgroundStrokeColor, RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}}"
                            BorderThickness="{Binding BackgroundStrokeThickness, RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}}"
                            Background="{TemplateBinding Background}"/>
            <Border x:Name="PART_SelectionRange" HorizontalAlignment="Left" 
                            CornerRadius="{Binding BackgroundRadius, RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}}"
                            Height="{TemplateBinding Height}"
                            BorderBrush="{Binding BackgroundStrokeColor, RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}}"
                            BorderThickness="{Binding BackgroundStrokeThickness, RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}}"
                            Background="{Binding SelectionColor, RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}}"/>
            <TextBox Text="{Binding RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}, Path=Value, StringFormat={}{0:F2},Mode=TwoWay }"
                                 VerticalAlignment="Center" BorderThickness="0" Background="Transparent" 
                                 HorizontalAlignment="Right" Style="{DynamicResource ResourceKey=TextBoxTransparent}"
                                 Height="{TemplateBinding Height}" Padding="0,0,5,0"
                                 IsEnabled="{Binding IsTextEnabled, RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}}" 
                                 Visibility="{Binding TextVisibility, RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}}"/>
            <Track Grid.Row="0" x:Name="PART_Track" >
                <Track.Thumb >
                    <Thumb Style="{StaticResource HorizontalSliderThumbStyle}" />
                </Track.Thumb>
            </Track>
        </Grid>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type Slider}" x:Key="Vertical">
        <Grid >
            <Border x:Name="TrackBackground"
                            CornerRadius="{Binding BackgroundRadius, RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}}"
                            Height="{TemplateBinding Height}"
                            BorderBrush="{Binding BackgroundStrokeColor, RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}}"
                            BorderThickness="{Binding BackgroundStrokeThickness, RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}}"
                            Background="{TemplateBinding Background}"/>
            <Border x:Name="PART_SelectionRange" VerticalAlignment="Top" 
                            CornerRadius="{Binding BackgroundRadius, RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}}"
                            Height="{TemplateBinding Height}"
                            BorderBrush="{Binding BackgroundStrokeColor, RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}}"
                            BorderThickness="{Binding BackgroundStrokeThickness, RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}}"
                            Background="{Binding SelectionColor, RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}}"/>
            <TextBox Text="{Binding RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}, Path=Value, StringFormat={}{0:F2},Mode=TwoWay }"
                                 VerticalAlignment="Center" BorderThickness="0" Background="Transparent" 
                                 HorizontalAlignment="Right" Style="{DynamicResource ResourceKey=TextBoxTransparent}"
                                 Height="{TemplateBinding Height}" 
                                 IsEnabled="{Binding IsTextEnabled, RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}}" 
                                 Visibility="{Binding TextVisibility, RelativeSource={RelativeSource AncestorType=controls:ModifiableSlider}}"/>
            <Track Grid.Row="0" x:Name="PART_Track" >
                <Track.Thumb >
                    <Thumb Style="{StaticResource VerticalSliderThumbStyle}" />
                </Track.Thumb>
            </Track>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="{x:Static Slider.IsSelectionRangeEnabledProperty}" Value="True">
                <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="{x:Static Slider.IsSelectionRangeEnabledProperty}" Value="False">
                <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Hidden"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type controls:ModifiableSlider}" BasedOn="{StaticResource {x:Type Slider}}">
        <Setter Property="SelectionEnd" Value="{Binding Value, RelativeSource={RelativeSource Self}}" />
        <Setter Property="SelectionStart" Value="{Binding Minimum, RelativeSource={RelativeSource Self}}"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template" Value="{StaticResource Horizontal}"/>
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource Vertical}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
