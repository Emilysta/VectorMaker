<Window x:Class="VectorMaker.Views.MainWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls ="clr-namespace:VectorMaker.ControlsResources" 
        xmlns:iconPacks = "http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:docks="https://github.com/Dirkster99/AvalonDock"
        xmlns:templateselectors="clr-namespace:VectorMaker.TemplateSelectors"
        xmlns:viewModels="clr-namespace:VectorMaker.ViewModel"
        xmlns:views="clr-namespace:VectorMaker.Views" 
        xmlns:converters="clr-namespace:VectorMaker.Converters" 
        xmlns:mahControls="http://metro.mahapps.com/winfx/xaml/controls" xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        WindowStyle="None"
        mc:Ignorable="d" d:Width="1920" d:Height="1080">
    <Window.Resources>
        <ResourceDictionary>
            <converters:DockingDocumentConverter x:Key="DockingDocumentConverter"/>
            <LinearGradientBrush x:Key="GreyGradientBrush" StartPoint="0,0" EndPoint="1,0">
                <GradientStop Color="Transparent" Offset="0.05"/>
                <GradientStop Color="{StaticResource LightGreyColor}" Offset="0.5"/>
                <GradientStop Color="Transparent" Offset="0.95"/>
            </LinearGradientBrush>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.ComboBox.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Window.DataContext>
        <viewModels:MainWindowViewModel/>
    </Window.DataContext>
    <Grid Background="#FF2D2D30">
        <!--xmlns:icons = "http://metro.mahapps.com/winfx/xaml/iconpacks"-->
        <DockPanel HorizontalAlignment="Stretch" LastChildFill="True" VerticalAlignment="Stretch" x:Name="MainDockPanel">
            <!-- Top Dock-->
            <Grid DockPanel.Dock="Top" Height="40">
                <StackPanel Orientation="Horizontal">
                    <Image Source="{StaticResource VectorMakerIcon}" Margin="3" Width="35"/>
                    <Label Content="VectorMaker" VerticalAlignment="Center" FontWeight="ExtraLight" FontSize="17" Foreground="{StaticResource LightText}"/>
                    <Separator Background="{StaticResource GreyGradientBrush}" Height="2">
                        <Separator.LayoutTransform>
                            <RotateTransform Angle="90"/>
                        </Separator.LayoutTransform>
                    </Separator>
                    <Menu  Background="Transparent" Grid.Column="1" VerticalAlignment="Center" FontSize="17" Foreground="{DynamicResource LightText}">
                        <Menu.ItemsPanel>
                            <ItemsPanelTemplate>
                                <DockPanel HorizontalAlignment="Stretch"/>
                            </ItemsPanelTemplate>
                        </Menu.ItemsPanel>
                        <MenuItem Header="File">
                            <MenuItem Header="New Document" Command="{Binding NewDocumentCommand}"/>
                            <MenuItem Header="Open Document" Command="{Binding OpenDocumentCommand}"/>
                            <Separator/>
                            <MenuItem Header="Export as">
                                <MenuItem Header="SVG File" Command="{Binding ActiveDocument.SaveAsCommand}" CommandParameter="svg"/>
                                <MenuItem Header="PNG File" Command="{Binding ActiveDocument.SaveAsCommand}" CommandParameter="png"/>
                                <MenuItem Header="BMP File" Command="{Binding ActiveDocument.SaveAsCommand}" CommandParameter="bmp"/>
                                <MenuItem Header="PDF File" Command="{Binding ActiveDocument.SaveAsCommand}" CommandParameter="pdf"/>
                                <MenuItem Header="TIFF File" Command="{Binding ActiveDocument.SaveAsCommand}" CommandParameter="tiff"/>
                                <MenuItem Header="JPEG File" Command="{Binding ActiveDocument.SaveAsCommand}" CommandParameter="jpeg"/>
                            </MenuItem>
                            <Separator/>
                            <MenuItem Header="Save Current File" Command="{Binding ActiveDocument.SaveCommand}"/>
                            <MenuItem Header="Save All Files" Command="{Binding SaveAllCommand}"/>
                        </MenuItem>
                        <MenuItem Header="View" >
                            <MenuItem Header="Application Settings" Command="{Binding OpenApplicationSettingsCommand}"/>
                        </MenuItem>
                        <MenuItem Header="Edit" IsEnabled="False"/>
                        <MenuItem Header="Object" >
                            <MenuItem Header="Group" Command="{Binding ActiveDocument.GroupCommand}"/>
                            <MenuItem Header="Ungroup" Command="{Binding ActiveDocument.UngroupCommand}"/>
                            <MenuItem Header="Flip horizontal" Command="{Binding ActiveDocument.FlipHorizontalCommand}"/>
                            <MenuItem Header="Flip vertical" Command="{Binding ActiveDocument.FlipVerticalCommand}"/>
                            <MenuItem Header="Rotate 90 clockwise" Command="{Binding ActiveDocument.RotateClockwiseCommand}"/>
                            <MenuItem Header="Rotate 90 counterclockwise" Command="{Binding ActiveDocument.RotateCounterclockwiseCommand}"/>
                            <Separator/>
                        </MenuItem>
                        <MenuItem Header="Layer" >
                            <MenuItem Header="Add layer above current"/>
                            <MenuItem Header="Add layer below current"/>
                        </MenuItem>
                        <MenuItem Header="Filter" IsEnabled="False"/>
                        <MenuItem Header="Select" IsEnabled="False"/>
                        <MenuItem Header="Tools" >
                            <MenuItem Header="Transform Tool" Command="{Binding OpenTransformToolCommand}"/>
                            <MenuItem Header="Fill &amp; Stroke Properties Tool" Command="{Binding OpenPropertiesToolCommand}"/>
                            <MenuItem Header="Alignment Tool" Command="{Binding OpenAlignmentToolCommand}"/>
                            <MenuItem Header="Layer Tool" Command="{Binding OpenLayersToolCommand}"/>
                        </MenuItem>
                        <MenuItem Header="Help" IsEnabled="False"/>
                    </Menu>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <controls:ButtonWithIcon ToolTip="Minimize" IconKind="Dash" Background="Transparent" 
                                                 Click="MinimizeApplicationButton_Click" Width="40"/>
                    <controls:ToggleButtonWithIcon  ToolTip="Maximize" 
                                                       IconKind="WindowMaximizeRegular" Width="40"
                                                   Click="MaximizeRestoreApplicationButton_Click" Background="Transparent" />
                    <controls:ButtonWithIcon ToolTip="Exit" IconKind="X" 
                                                 Click="ExitApplicationButton_Click"
                                                Background="Transparent" 
                                                 Width="40"/>
                </StackPanel>
            </Grid>

            <Grid DockPanel.Dock="Top" Margin="3,0,0,0"  Height="35" Background="Transparent">
                <StackPanel Orientation="Horizontal">
                    <ItemsControl ItemsSource="{Binding TopMenu.ToggleButtonKinds}" >
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <ToggleButton Command="{Binding ClickCommand}" 
                                          CommandParameter="{Binding}" 
                                          IsChecked="{Binding IsChecked,Mode=OneWay}" 
                                          Style="{StaticResource ToggleButtonForMenu}"
                                          ToolTip="{Binding ToolTip,Mode=OneTime}">
                                    <iconPacks:PackIconMaterial Kind="{Binding ToggleIconKind,Mode=OneWay}" Foreground="#CCCCCC"/>
                                </ToggleButton>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                    <GridSplitter Width="1" Background="{StaticResource LightGreyBrush}"/>
                    <StackPanel Orientation="Horizontal" Margin="0,3,0,0">
                        <Label Content="Width" Foreground="#CCCCCC" Margin="5,2,0,0"/>
                        <mahControls:NumericUpDown Value="{Binding SelectedElement.Width, Mode=TwoWay}"/>


                        <Label Content="Height" Foreground="#CCCCCC" Margin="20,2,0,0"/>
                        <mahControls:NumericUpDown Value="{Binding SelectedElement.Height, Mode=TwoWay}"/>

                        <Label Content="X" Foreground="#CCCCCC" Margin="20,2,0,0"/>
                        <mahControls:NumericUpDown Value="{Binding SelectedObjectTransformX, Mode=TwoWay}"/>


                        <Label Content="Y" Foreground="#CCCCCC" Margin="20,2,0,0"/>
                        <mahControls:NumericUpDown Value="{Binding SelectedObjectTransformY, Mode=TwoWay}"/>

                        <Label Content="Selected object:" Foreground="#CCCCCC" Margin="20,2,0,0"/>
                        <Label Content="{Binding SelectedObjectLabel, Mode=OneWay}" HorizontalAlignment="Left"/>
                    </StackPanel>
                </StackPanel>
            </Grid>
            <!-- Left Dock-->
            <Grid DockPanel.Dock="Left" Width="35">
                <ItemsControl ItemsSource="{Binding LeftMenu.ToggleButtonKinds}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ToggleButton Command="{Binding ClickCommand}" 
                                          CommandParameter="{Binding}" 
                                          IsChecked="{Binding IsChecked,Mode=OneWay}" 
                                          Style="{StaticResource ToggleButtonForMenu}"
                                          ToolTip="{Binding ToolTip,Mode=OneTime}">
                                <iconPacks:PackIconMaterial Kind="{Binding ToggleIconKind,Mode=OneWay}" Foreground="#CCCCCC"/>
                            </ToggleButton>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <StackPanel Orientation="Vertical" VerticalAlignment="Bottom">
                    <controls:ButtonWithIcon Width="25" Height="25" VerticalAlignment="Bottom" IconKind="CardChecklist" Command="{Binding TestObjectsCountCommand}"/>
                    <controls:ButtonWithIcon Width="25" Height="25" VerticalAlignment="Bottom" IconKind="Alarm" Command="{Binding TestObjectsGroupingCommand}"/>
                </StackPanel>
            </Grid>

            <Grid DockPanel.Dock="Bottom" Height="35" HorizontalAlignment="Left">
                <StackPanel Orientation="Horizontal" Margin="0,3,0,0">
                    <Label Content="Fill" Foreground="#CCCCCC" Margin="0,2,0,0"/>
                    <Rectangle Width="45" Height="25" RadiusX="1" RadiusY="1" Fill="{Binding ShapePropertiesModel.FillBrush}" Stroke ="{StaticResource LightGreyBrush}" StrokeThickness="0.5" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding FillBrushPickCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Rectangle>
                    <Label Content="Stroke" Foreground="#CCCCCC" Margin="20,2,0,0"/>
                    <Rectangle Width="45" Height="25" RadiusX="1" RadiusY="1" Fill="{Binding ShapePropertiesModel.StrokeBrush}" Stroke="{StaticResource LightGreyBrush}" StrokeThickness="0.5"    >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                <i:InvokeCommandAction Command="{Binding StrokeBrushPickCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Rectangle>

                    <Label Content="Stroke thickness" Foreground="#CCCCCC" Margin="20,2,0,0"/>
                    <mahControls:NumericUpDown Value="{Binding ShapePropertiesModel.StrokeThickness}"/>

                    <!--<iconPacks:PackIconBootstrapIcons Kind="Alarm" Margin="5,0,5,5"  Width="25" Height="25" Foreground="Black"/>-->
                    <Label Content="Stroke type" Foreground="#CCCCCC" Margin="20,2,0,0"/>
                    <ComboBox Width="100" Margin="3" IsEditable="False"
                              ItemsSource="{Binding ShapePropertiesModel.StrokeTypes}" 
                              SelectedIndex="{Binding ShapePropertiesModel.SelectedStrokeDashArray}" 
                              Style="{Binding Mode=OneWay, Source={StaticResource MahApps.Styles.ComboBox.Virtualized}}"
                              ItemContainerStyle="{Binding Mode=OneWay, Source={StaticResource MahApps.Styles.ComboBoxItem}}"
                              BorderThickness="0.5" BorderBrush="{StaticResource LightGreyBrush}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type DoubleCollection}">
                                <Line StrokeDashArray="{Binding}" Stroke="White" StrokeThickness="4"  X1="0" X2="60" Fill="White"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>
            </Grid>
            <!-- Center Dock-->
            <Grid HorizontalAlignment="Stretch" >
                <!--<Frame Source="Pages/NewDocumentPage.xaml" Visibility="Hidden"/>-->
                <docks:DockingManager HorizontalAlignment="Stretch" 
                                      Visibility="Visible" 
                                      AutoWindowSizeWhenOpened="True" 
                                      DocumentsSource="{Binding Documents}" 
                                      ActiveContent="{Binding ActiveDocument, Mode=TwoWay, Converter={StaticResource DockingDocumentConverter}}" 
                                      AnchorablesSource="{Binding Tools}"
                                      x:Name="DockManager" Background="#353538">
                    <docks:DockingManager.LayoutItemTemplateSelector>
                        <templateselectors:LayoutPaneTemplateSelector>
                            <templateselectors:LayoutPaneTemplateSelector.FileViewTemplate>
                                <DataTemplate DataType="{x:Type viewModels:DrawingCanvasViewModel}">
                                    <views:DrawingCanvasView/>
                                </DataTemplate>
                            </templateselectors:LayoutPaneTemplateSelector.FileViewTemplate>
                            <templateselectors:LayoutPaneTemplateSelector.ObjectTransformsViewTemplate>
                                <DataTemplate DataType="{x:Type viewModels:ObjectTransformsViewModel}">
                                    <StackPanel>
                                        <Viewbox>
                                            <views:ObjectTransformsView/>
                                        </Viewbox>
                                    </StackPanel>
                                </DataTemplate>
                            </templateselectors:LayoutPaneTemplateSelector.ObjectTransformsViewTemplate>

                            <templateselectors:LayoutPaneTemplateSelector.ObjectPropertiesViewTemplate>
                                <DataTemplate DataType="{x:Type viewModels:ObjectPropertiesViewModel}">
                                    <StackPanel>
                                        <Viewbox>
                                            <views:ObjectPropertiesView/>
                                        </Viewbox>
                                    </StackPanel>
                                </DataTemplate>
                            </templateselectors:LayoutPaneTemplateSelector.ObjectPropertiesViewTemplate>

                            <templateselectors:LayoutPaneTemplateSelector.DrawingLayersToolViewTemplate>
                                <DataTemplate DataType="{x:Type viewModels:DrawingLayersToolViewModel}">
                                    <StackPanel>
                                        <Viewbox>
                                            <views:DrawingLayersToolView/>
                                        </Viewbox>
                                    </StackPanel>
                                </DataTemplate>
                            </templateselectors:LayoutPaneTemplateSelector.DrawingLayersToolViewTemplate>

                            <templateselectors:LayoutPaneTemplateSelector.ObjectAlignmentViewTemplate>
                                <DataTemplate DataType="{x:Type viewModels:ObjectAlignmentViewModel}">
                                    <StackPanel>
                                        <Viewbox>
                                            <views:ObjectAlignmentView/>
                                        </Viewbox>
                                    </StackPanel>
                                </DataTemplate>
                            </templateselectors:LayoutPaneTemplateSelector.ObjectAlignmentViewTemplate>
                        </templateselectors:LayoutPaneTemplateSelector>
                    </docks:DockingManager.LayoutItemTemplateSelector>
                    <docks:DockingManager.LayoutItemContainerStyleSelector>
                        <templateselectors:LayoutPaneStyleSelector>
                            <templateselectors:LayoutPaneStyleSelector.DrawingCanvasStyle>
                                <Style TargetType="{x:Type LayoutDocumentItem}">
                                    <Setter Property="Title" Value="{Binding Model.FileName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <Setter Property="ToolTip" Value="{Binding Model.FilePath, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                    <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}"/>
                                    <Setter Property="ContentId" Value="{Binding Model.FileName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                </Style>
                            </templateselectors:LayoutPaneStyleSelector.DrawingCanvasStyle>
                            <templateselectors:LayoutPaneStyleSelector.ToolStyle>
                                <Style TargetType="{x:Type LayoutAnchorableItem}">
                                    <Setter Property="Title" Value="{Binding Model.Title}" />
                                    <Setter Property="CanClose" Value="True" />
                                    <Setter Property="CloseCommand" Value="{Binding Model.CloseToolCommand}" />
                                    <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                                </Style>
                            </templateselectors:LayoutPaneStyleSelector.ToolStyle>
                        </templateselectors:LayoutPaneStyleSelector>
                    </docks:DockingManager.LayoutItemContainerStyleSelector>
                    <DockingManager.Theme>
                        <Vs2013DarkTheme/>
                    </DockingManager.Theme>
                    <LayoutRoot>
                        <LayoutPanel>
                            <LayoutDocumentPane />
                            <LayoutAnchorablePane DockMinWidth="300" />
                        </LayoutPanel>
                    </LayoutRoot>
                </docks:DockingManager>
            </Grid>

        </DockPanel>
    </Grid>
</Window>
